// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PreferenceManagement.API.Infrastructure.Database;

namespace PreferenceManagement.API.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PreferenceContext))]
    [Migration("20220327180557_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PreferenceManagement.API.Domain.Entities.PreferenceDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("level");

                    b.Property<string>("Solution")
                        .HasColumnType("text")
                        .HasColumnName("solution");

                    b.HasKey("Id")
                        .HasName("pk_preference_definitions");

                    b.HasIndex("Key", "Solution")
                        .IsUnique()
                        .HasDatabaseName("ix_preference_definitions_key_solution");

                    b.ToTable("preference_definitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa2a0602-31b2-40ee-a622-490799bb81fb"),
                            Key = "DARK_MODE",
                            Level = "Solution",
                            Solution = "ExampleSolution"
                        },
                        new
                        {
                            Id = new Guid("e9f4ae48-2538-45f1-b052-85ef4b73f54a"),
                            Key = "EMAIL_NOTIFICATIONS",
                            Level = "Solution",
                            Solution = "ExampleSolution"
                        },
                        new
                        {
                            Id = new Guid("3f92b025-bd0f-4695-8aa3-a5bbfaa66031"),
                            Key = "ANALYTICS_CONSENT",
                            Level = "Universal"
                        });
                });

            modelBuilder.Entity("PreferenceManagement.API.Domain.Entities.UserPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("PreferenceId")
                        .HasColumnType("uuid")
                        .HasColumnName("preference_id");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_user_preferences");

                    b.HasIndex("PreferenceId")
                        .HasDatabaseName("ix_user_preferences_preference_id");

                    b.HasIndex("UserId", "PreferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_preferences_user_id_preference_id");

                    b.ToTable("user_preferences");
                });

            modelBuilder.Entity("PreferenceManagement.API.Domain.Entities.UserPreference", b =>
                {
                    b.HasOne("PreferenceManagement.API.Domain.Entities.PreferenceDefinition", "Preference")
                        .WithMany()
                        .HasForeignKey("PreferenceId")
                        .HasConstraintName("fk_user_preferences_preference_definitions_preference_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preference");
                });
#pragma warning restore 612, 618
        }
    }
}
